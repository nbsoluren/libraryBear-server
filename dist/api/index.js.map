{"version":3,"sources":["../../src/api/index.js"],"names":["library","extras","weather","worldTime","ytsList","config","db","api","use","post","req","res","checkUser","body","queryResult","action","searchBooks","searchBooksByAuthor","searchBooksByCategory","searchBooksByTitle","console","log","showAllBooks","showAllAvailableBooks","showBorrowedBooks","actLikeAnimal","temperature","datetime","listYtsMovies","searchYtsMovies","borrowBook","returnBook","getStarted","json","fulfillmentText","get","queryString","query","err","rows","status","message","data","groups","found","i","length","j","name","group","users","push","id","values","delete","params","affectedRows","functions","pushMessage","map","user","sendToAllFb","row"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport { version } from '../../package.json';\nimport { Router } from 'express';\nimport facets from './facets';\nimport * as library from './library';\nimport * as extras from './extras';\nimport * as weather from './weather';\nimport * as worldTime from './world_time';\nimport * as ytsList from './yts_list';\n\nexport default ({ config, db }) => {\n\tlet api = Router();\n\n\t// mount the facets resource\n\tapi.use('/facets', facets({ config, db }));\n\n\t// perhaps expose some API metadata at the root\n\tapi.post('/bear-webhook', async (req, res) => {\n\t\ttry {\n\t\t\tawait library.checkUser(db, req, res);\n\n\t\t\tswitch(req.body.queryResult.action) {\n\t\t\t\tcase 'search-books':\n\t\t\t\t\treturn library.searchBooks(db, req, res);\n\t\t\t\tcase 'search-books-by-author':\n\t\t\t\t\treturn library.searchBooksByAuthor(db, req, res);\n\t\t\t\tcase 'search-books-by-category':\n\t\t\t\t\treturn library.searchBooksByCategory(db, req, res);\n\t\t\t\tcase 'search-books-by-title':\n\t\t\t\t\treturn library.searchBooksByTitle(db, req, res);\n\t\t\t\tcase 'show-all-books':\n\t\t\t\t\tconsole.log(\"called\");\n\t\t\t\t\treturn library.showAllBooks(db, req, res);\n\t\t\t\tcase 'show-all-available-books':\n\t\t\t\t\treturn library.showAllAvailableBooks(db, req, res);\n\t\t\t\tcase 'show-borrowed-books':\n\t\t\t\t\treturn library.showBorrowedBooks(db, req, res);\n\t\t\t\tcase 'act-like-animal':\n\t\t\t\t\treturn extras.actLikeAnimal(db, req, res);\n\t\t\t\t\t// case 'notify-user-return-book':\n\t\t\t\t\t// return library.notifyUserReturnBook(db, req, res);\n\t\t\t\tcase 'weather':\n\t\t\t\t\treturn weather.weather(db, req, res);\n\t\t\t\tcase 'temperature':\n\t\t\t\t\treturn weather.temperature(db, req, res);\n\t\t\t\tcase 'datetime':\n\t\t\t\t\treturn worldTime.datetime(db, req, res);\n\t\t\t\tcase 'list-yts-movies':\n\t\t\t\t\treturn ytsList.listYtsMovies(db, req, res);\n\t\t\t\tcase 'search-yts-movies':\n\t\t\t\t\treturn ytsList.searchYtsMovies(db, req, res);\n\t\t\t\tcase 'borrow-book':\t\t\t\n\t\t\t\t\treturn library.borrowBook(db, req, res);\n\t\t\t\tcase 'return-book':\t\n\t\t\t\t\treturn library.returnBook(db, req, res);\n\t\t\t\tcase 'getName':\n\t\t\t\t\treturn library.getStarted(db,req,res);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn res.json({ fulfillmentText: 'There is an error 👾rstrst' });\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tconsole.log(e)\n\t\t\treturn res.json({ fulfillmentText: 'There is an error 👾' });\n\t\t}\n\t});\n\n\tapi.get('/users', (req, res) => {\n\t\tconst queryString = 'SELECT id, name FROM user WHERE source=\\'facebook\\'';\n\t\tdb.query(queryString, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else {\n\t\t\t\tres.json({ data: rows });\n\t\t\t}\n\t\t})\n\t});\n\n\tapi.get('/groups', (req, res) => {\n\t\tconst queryString = 'SELECT a.id, a.name, b.name AS `group` FROM user a JOIN user_group b ON a.id=b.user WHERE a.source=\\'facebook\\'';\n\t\tdb.query(queryString, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else {\n\t\t\t\tvar groups = [];\n\t\t\t\tvar found;\n\t\t\t\tfor(var i = 0; i < rows.length; i++) {\n\t\t\t\t\tfound = false;\n\t\t\t\t\tfor(var j = 0; j < groups.length; j++) {\n\t\t\t\t\t\tif(groups[j].name == rows[i].group){\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tgroups[j].users.push({\n\t\t\t\t\t\t\t\tid: rows[i].id,\n\t\t\t\t\t\t\t\tname: rows[i].name\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!found) {\n\t\t\t\t\t\tgroups.push({\n\t\t\t\t\t\t\tname: rows[i].group,\n\t\t\t\t\t\t\tusers: [{\n\t\t\t\t\t\t\t\tid: rows[i].id,\n\t\t\t\t\t\t\t\tname: rows[i].name\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tres.json({ data: groups });\n\t\t\t}\n\t\t})\n\t});\n\n\tapi.post('/groups', (req, res) => {\n\t\tvar queryString = 'SELECT name FROM user_group WHERE name = ?';\n\n\t\tdb.query(queryString, req.body.name, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else if(rows.length) {\n\t\t\t\tres.json({ message: 'Group name already taken' });\n\t\t\t} else {\n\t\t\t\tfor(var i = 0; i < req.body.users.length; i++) {\n\t\t\t\t\tqueryString = 'INSERT IGNORE INTO user_group VALUES(?, ?)';\n\t\t\t\t\tconst values = [req.body.name, req.body.users[i]];\n\n\t\t\t\t\tdb.query(queryString, values, (err, rows) => {\n\t\t\t\t\t\tif(err) {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tres.json({ message: 'Successfully created group' });\n\t\t\t}\n\t\t});\n\t})\n\n\tapi.delete('/groups/:name', (req, res) => {\n\t\tvar queryString = 'DELETE FROM user_group WHERE name = ?';\n\n\t\tdb.query(queryString, req.params.name, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else if(!rows.affectedRows) {\n\t\t\t\tres.json({ message: 'Group does not exist' });\n\t\t\t} else {\n\t\t\t\tres.json({ message: 'Successfully deleted group' });\n\t\t\t}\n\t\t});\n\t})\n\n\tapi.post('/message-user', (req, res) => {\n\t\tconst id = req.body.id;\n\t\tconst message = req.body.message;\n\n\t\tconst queryString = 'SELECT id FROM user WHERE source=\\'facebook\\'';\n\t\tdb.query(queryString, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else if(!rows.length) {\n\t\t\t\tres.json({ message: 'User not found in database 🤷‍♀️'});\n\t\t\t} else {\n\t\t\t\tfunctions.pushMessage(id, message);\n\t\t\t\tres.json({ message: 'Message successfully messaged user 🙂 '});\n\t\t\t}\n\t\t})\n\t});\n\n\tapi.post('/message-users', (req, res) => {\n\t\tconst users = req.body.id.map(user => {\n\t\t\treturn { id: user };\n\t\t});\n\t\tconst message = req.body.message;\n\t\tfunctions.sendToAllFb(users, message);\n\t\tres.json({ message: 'Message successfully messaged user 🙂 '});\n\t});\n\n\tapi.post('/message-group', (req, res) => {\n\t\tconst name = req.body.name;\n\t\tconst message = req.body.message;\n\n\t\tvar queryString = 'SELECT user FROM user_group WHERE name = ?';\n\t\tdb.query(queryString, name, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else if(!rows.length) {\n\t\t\t\tres.json({ message: 'Group does not exist 🤷‍♀️'});\n\t\t\t} else {\n\t\t\t\tconst users = rows.map(row => {\n\t\t\t\t\treturn { id: row.user }\n\t\t\t\t});\n\t\t\t\tfunctions.sendToAllFb(users, message);\n\t\t\t\tres.json({ message: 'Message successfully messaged the group 🙂 '});\n\t\t\t}\n\t\t})\n\t});\n\n\tapi.post('/broadcast', (req, res) => {\n\t\tconst message = req.body.message;\n\n\t\tconst queryString = 'SELECT id FROM user WHERE source=\\'facebook\\'';\n\t\tdb.query(queryString, (err, rows) => {\n\t\t\tif(err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tres.status(500).json({ message: 'There was a problem with the database ☹️'});\n\t\t\t} else if(rows.length) {\n\t\t\t\tfunctions.sendToAllFb(rows, message);\n\t\t\t\tres.json({ message: 'Message successfully broadcasted to all users 🙂 '});\n\t\t\t} else {\n\t\t\t\tres.json({ message: 'I haven\\'t talked to anyone in facebook yet 🤷‍♀️'});\n\t\t\t}\n\t\t})\n});\n\n\treturn api;\n}\n"]}