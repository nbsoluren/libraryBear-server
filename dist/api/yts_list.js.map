{"version":3,"sources":["../../src/api/yts_list.js"],"names":["db","req","res","params","body","queryResult","parameters","pushCards","getIdSource","getNoOfYtsMovies","number","json","fulfillmentText","listYtsMovies","getSearchedYtsMovies","search","results","length","searchYtsMovies","cheerio","pushNotif","id","payload","url","pageAccessToken","headers","method","JSON","stringify","catch","e","console","log","cards","Promise","resolve","reject","recipient","message","attachment","type","template_type","elements","splicedCards","splice","i","push","title","year","subtitle","genre","rating","image_url","image","buttons","link","originalDetectIntentRequest","hasOwnProperty","source","data","sender","session","getHtmlFile","text","parseYtsMovies","$","map","element","find","attr","not","get","numberOfMovies","html","load","movieList","pageNum","slice","toSearch","replace","hasNext","last"],"mappings":"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","file":"yts_list.js","sourcesContent":["import fetch from 'node-fetch';\nimport * as cheerio from 'cheerio';\n\nfunction pushNotif(id, payload) {\n    const url = 'https://graph.facebook.com/v2.6/me/messages?access_token=';\n    const pageAccessToken = 'EAALqslE8is4BAGSVjDTN5oCfT5aNlcgmQIbKOZALeLHUC9Ldc5aDZARu5jRMZBhwj5WnPzuFxL8BzTlsjKLZC90FLzYmXgbnhDo5i1Gr8X9ubIMdBSAD1wSIMwRBhSrxHYSrMLyz9rYi4mffoQAQO4eZBBCv9oL7zItyLjiIfIAZDZD'\n    \n    fetch(url + pageAccessToken, {\n        headers: { 'Content-Type': 'application/json' },\n        method: \"POST\",\n        body: JSON.stringify(payload)       \n    })\n        .catch((e) => { console.log(e); });\n}\n\nfunction pushCards(id, cards) {\n    return new Promise((resolve, reject) => {\n        var payload = {\n            recipient: {\n                id: id\n            },\n            message: {\n                attachment: {\n                    type: 'template',\n                    payload: {\n                        template_type:'generic',\n                        elements:[]\n                    }\n                }\n            }\n        };\n        var splicedCards;\n        while(cards.length) {\n            splicedCards = cards.splice(0, 9);\n            payload.message.attachment.payload.elements = [];\n            \n            for(var i = 0; i < splicedCards.length; i++) {\n                payload.message.attachment.payload.elements.push({\n                    title: splicedCards[i].title + ' (' + splicedCards[i].year + ')',\n                    subtitle: splicedCards[i].genre + ' — ' + splicedCards[i].rating,\n                    image_url: splicedCards[i].image,\n                    buttons:[\n                        {\n                            type: 'web_url',\n                            title: 'Open',\n                            url: splicedCards[i].link\n                        }              \n                    ]      \n                });\n            }\n            pushNotif(id, payload);\n        }\n        return resolve();\n    });\n}\n\nfunction getIdSource(req) {\n    return new Promise((resolve, reject) => {\n        if(req.body.originalDetectIntentRequest.hasOwnProperty('source') && req.body.originalDetectIntentRequest.source == 'facebook') {\n            const source = req.body.originalDetectIntentRequest.source;\n            const id = req.body.originalDetectIntentRequest.payload.data.sender.id;\n            return resolve([id, source]);\n        } else {\n            const source = 'DialogFlow';\n            const id = req.body.session;\n            return resolve([id, source]);\n        }\n    })\n}\n\nfunction getHtmlFile(url) {\n    return new Promise(async (resolve, reject) => {\n        const res = await fetch(url);\n        return resolve(await res.text());\n    });\n}\n\nfunction parseYtsMovies($) {\n    return new Promise((resolve, reject) => {\n        return resolve($('.browse-movie-wrap').map((i, element) => {\n            return {\n                image: $(element).find('.img-responsive').attr('src'),\n                title: $(element).find('.browse-movie-title').text(),\n                year: $(element).find('.browse-movie-year').text(),\n                rating: $(element).find('.rating').text(),\n                genre: $(element).find('h4').not('.rating').text(),\n                link: $(element).find('.browse-movie-link').attr('href')\n            };\n        }).get());\n    });\n}\n\nfunction getNoOfYtsMovies(numberOfMovies) {\n    return new Promise(async (resolve, reject) => {\n        var url = 'https://yts.am/browse-movies';\n\n        var html = await getHtmlFile(url);\n        var $ = cheerio.load(html);\n        var movieList = await parseYtsMovies($);\n        var pageNum = 2;\n\n        while(movieList.length < numberOfMovies) {\n            html = await getHtmlFile(url + '?page=' + pageNum++);\n            $ = cheerio.load(html);\n            movieList = [...movieList, ...(await parseYtsMovies($))];\n        }\n\n        return resolve(movieList.slice(0, numberOfMovies));\n    });\n}\n\nfunction getSearchedYtsMovies(toSearch) {\n    return new Promise(async (resolve, reject) => {\n        var url = 'https://yts.am/browse-movies/' + toSearch.replace(' ', '%20') + '/all/all/0/latest';\n\n        var html = await getHtmlFile(url);\n        var $ = cheerio.load(html);\n        var movieList = await parseYtsMovies($);\n        var pageNum = 2;\n\n        var hasNext = $('.tsc_pagination .tsc_paginationA .tsc_paginationA06').last().text() == 'Next »';\n        while(movieList.length < 27 && hasNext) {\n            html = await getHtmlFile(url + '?page=' + pageNum++);\n            $ = cheerio.load(html);\n            movieList = [...movieList, ...(await parseYtsMovies($))];\n            hasNext = $('.tsc_pagination .tsc_paginationA .tsc_paginationA06').last().text() == 'Next »';\n        }\n\n        return resolve(movieList.slice(0, 27));\n    });\n}\n\nexport async function listYtsMovies(db, req, res) {\n    const params = req.body.queryResult.parameters;\n    pushCards((await getIdSource(req))[0], await getNoOfYtsMovies(params.number))\n    return res.json({ fulfillmentText: 'Here you go 😁🎞: ' });\n}\n\nexport async function searchYtsMovies(db, req, res) {\n    const params = req.body.queryResult.parameters;\n    var results = await getSearchedYtsMovies(params.search);\n\n    if(await results.length == 0) {\n        return res.json({ fulfillmentText: 'I found no movies like that 🤷‍♀️' });\n    } else if(await results.length == 27) {\n        pushCards((await getIdSource(req))[0], results);\n        return res.json({ fulfillmentText: 'Here you go (limited to 27 results) 😁🎞: ' });\n    } else {\n        pushCards((await getIdSource(req))[0], results);\n        return res.json({ fulfillmentText: 'Here you go 😁🎞: ' });\n    }\n}"]}