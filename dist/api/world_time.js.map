{"version":3,"sources":["../../src/api/world_time.js"],"names":["db","req","res","console","log","location","body","queryResult","parameters","address","key","url","replace","result","json","results","length","fulfillmentText","geolocation","geometry","resolvedLocation","formatted_address","lat","lng","Date","now","mom","getTime","datetime","tz","timeZoneId","format"],"mappings":";;;;;;;;uEAGO,iBAAwBA,EAAxB,EAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,gCAAQC,GAAR,CAAY,QAAZ;AACMC,gCAFH,GAEcJ,IAAIK,IAAJ,CAASC,WAAT,CAAqBC,UAArB,CAAgCC,OAAhC,IAA2C,EAA3C,GAA+CR,IAAIK,IAAJ,CAASC,WAAT,CAAqBC,UAArB,CAAgCC,OAA/E,GAAyF,QAFvG;AAGGC,2BAHH,GAGS,yCAHT;AAKCC,2BALD,GAKO,+DAA+DN,SAASO,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAA/D,GAA4F,OALnG;AAAA;AAAA,+BAMgB,yBAAMD,MAAMD,GAAZ,CANhB;;AAAA;AAMCG,8BAND;AAAA;AAAA,+BAOYA,OAAOC,IAAP,EAPZ;;AAAA;AAOHD,8BAPG;;AAAA,4BASCA,OAAOE,OAAP,CAAeC,MAThB;AAAA;AAAA;AAAA;;AAAA,yDAS+Bd,IAAIY,IAAJ,CAAS,EAAEG,iBAAiB,yCAAnB,EAAT,CAT/B;;AAAA;AAWGC,mCAXH,GAWiBL,OAAOE,OAAP,CAAe,CAAf,EAAkBI,QAAlB,CAA2Bd,QAX5C;AAYGe,wCAZH,GAYsBP,OAAOE,OAAP,CAAe,CAAf,EAAkBM,iBAZxC;;;AAcHV,8BAAM,iEAAiEO,YAAYI,GAA7E,GAAmF,GAAnF,GAAyFJ,YAAYK,GAArG,GAA2G,aAA3G,GAA4HC,KAAKC,GAAL,KAAa,EAAzI,GAA+I,OAArJ;AAdG;AAAA,+BAeY,yBAAMd,MAAMD,GAAZ,CAfZ;;AAAA;AAeHG,8BAfG;AAAA;AAAA,+BAgBYA,OAAOC,IAAP,EAhBZ;;AAAA;AAgBHD,8BAhBG;AAkBCa,2BAlBD,GAkBO,8BAAO,IAAIF,IAAJ,CAAS,IAAIA,IAAJ,GAAWG,OAAX,EAAT,CAAP,CAlBP;AAmBGC,gCAnBH,GAmBcF,IAAIG,EAAJ,CAAOhB,OAAOiB,UAAd,EAA0BC,MAA1B,CAAiC,MAAjC,CAnBd;AAAA,yDAoBI7B,IAAIY,IAAJ,CAAS,EAAEG,iBAAiB,qBAAqBW,QAArB,GAAgC,MAAhC,GAAyCR,gBAAzC,GAA4D,SAA/E,EAAT,CApBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeQ,Q;;;;;AAHtB;;;;AACA","file":"world_time.js","sourcesContent":["import fetch from 'node-fetch';\nimport moment from 'moment-timezone';\n\nexport async function datetime(db, req, res) {\n    console.log(\"called\");\n    const location = req.body.queryResult.parameters.address != ''? req.body.queryResult.parameters.address : 'Manila';\n    const key = 'AIzaSyC1-DXL2WaJO-PVishqsTQVI5ClY_OBfL8';\n\n    var url = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + location.replace(' ', '+') + '&key=';    \n    var result = await fetch(url + key);\n    result = await result.json();\n\n    if(!result.results.length) return res.json({ fulfillmentText: 'Oops, I don\\'t know where that is ü§∑‚Äç‚ôÄÔ∏è' });\n\n    const geolocation = result.results[0].geometry.location;\n    const resolvedLocation = result.results[0].formatted_address;\n    \n    url = 'https://maps.googleapis.com/maps/api/timezone/json?location=' + geolocation.lat + ',' + geolocation.lng + '&timestamp=' + (Date.now() / 10) + '&key='\n    result = await fetch(url + key);\n    result = await result.json();\n\n    var mom = moment(new Date(new Date().getTime()));\n    const datetime = mom.tz(result.timeZoneId).format('LLLL');\n    return res.json({ fulfillmentText: 'It is currently ' + datetime + ' in ' + resolvedLocation + ' üòÅ‚åöÔ∏èüïì' });\n}"]}